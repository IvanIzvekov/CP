services:
  fastapi:
    build: ./app
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - ./alembic.ini:/app/alembic.ini
      - ./migrations:/app/migrations
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
          condition: service_started
      minio:
          condition: service_started
    networks:
      - app_net

#  parlant_app:
#    build: ./parlant_app
#    container_name: parlant_app
#    ports:
#      - "8010:8010"
#    env_file:
#      - .env
#    depends_on:
#      - redis
#    networks:
#      - app_net

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    env_file:
      - .env
    command: server /data --console-address ":9090"
    volumes:
      - ./data/minio:/data
    networks:
      - app_net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - app_net

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    depends_on:
      - fastapi
    networks:
      - app_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"   # изменён порт на 3001
    env_file:
      - .env
    volumes:
      - grafanadata:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app_net

networks:
  app_net:
    driver: bridge

volumes:
  pgdata:
  prometheusdata:
  grafanadata:
